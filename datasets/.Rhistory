roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.)
roc_plot
0.1/0.3
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = -.33)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) %>% jtools::theme_apa()
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa()
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot_pre
roc_plot_post
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post
ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .5)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .5)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post
0.3 / 0.1
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post
roc_plot_pre
roc_plot_pre1 <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post1 <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_pre1
FAR <- data_summary %>%
group_by(adult_child, cond_dist_features, pre_post) %>%
summarise(n_ta = length(target_abs_pres == "absent"),
FAR4 = (sum(false_id[confidence_rating >= 4])/9)/n_ta,
FAR3 = (sum(false_id[confidence_rating >= 3])/9)/n_ta,
FAR2 = (sum(false_id[confidence_rating >= 2])/9)/n_ta,
FAR1 = (sum(false_id[confidence_rating >= 1])/9)/n_ta,
FAR0 = (sum(false_id[confidence_rating >= 0])/9)/n_ta,
)  %>%
ungroup()
FAR <- FAR %>%
mutate_all(~replace(., is.nan(.), 0))
ROC_data <- left_join(HR, FAR)
ROC_data <- ROC_data %>% select(-n_tp,-n_ta)
ROC_data <- ROC_data %>%
pivot_longer(cols = HR4:FAR0, names_to = c("test","confidence_rating"), names_pattern = "(.*)(\\d+)") %>%
pivot_wider(names_from = test, values_from = value )
roc_plot_pre1 <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre1
roc_plot_post1 <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post1
roc_plot_pre1
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre
roc_plot_pre1
roc_plot_pre
roc_plot_pre1
roc_plot_post1
library(webexercises)
practical2_data <- read.csv("practical2_data.csv")
library(dplyr) #<1>
data_over18 <- practical2_data |> filter( age > 18) #<1>
n_over18 <- practical2_data |> filter( age > 18) |> count() #<2>
age_sd <- data_over18 |> group_by(treatment_group) |> summarise(sd_age = sd(age)) #<1>
mean_diff <- data_over18 |> #<1>
group_by(treatment_group) |> #<2>
summarise(mean_outcome = mean(outcome)) |> #<3>
pull(mean_outcome) |> #<4>
diff() #<5>
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> pull(outcome) |> var() #<1>
var_cg <- data_over18 |> filter(treatment_group == "Control")  |> pull(outcome) |> var()
# calculate the sample size of each group
n_tg <- data_over18 |> filter(treatment_group == "Treatment") |> nrow() #<2>
n_cg <- data_over18 |> filter(treatment_group == "Control") |> nrow()
# calculate the standard error of the difference between the means
se_diff <- sqrt((var_tg/n_tg) + (var_cg/n_cg)) #<3>
se_diff <- sqrt((var_cg+var_tg)/(n_cg+n_tg))
#The code below will start you off, you need to fill in the missing information
# get the treatment group data
treatmentGroup <- data_over18 |> filter(treatment_group == "Treatment") #<1>
# get the variance of the treatment group
var_tg <- treatmentGroup  |> pull(outcome) |> var() #<2>
# get the sample size of the treatment group
n_tg <- treatmentGroup |> nrow() #<3>
## You need to do the same for the control group
## You need to add the two variances together and divide by the sum of the two sample sizes
## You need to take the square root of the result
# the lower confidence interval
ci_lower <- mean_diff - (1.96 * se_diff) #<1>
ci_lower
# you need to calculate the upper confidence interval
ci_upper <- mean_diff + (1.96 * se_diff) #<2>
ci_upper
# plot of notmal distribution with 2.5% shaded on each side
x <- seq(-4, 4, length=100)
y <- dnorm(x, mean=0, sd=1)
plot(x, y, type="l", lwd=2, xlab="Standard Deviations", ylab="")
abline(v=c(-1.96, 1.96), lty=2)
abline(h=0, lty=2)
## add labels to represent the percentages of the distribution in the shaded and non-shaded areas
text(-2.5, 0.05, "2.5%", cex=0.8)
text(2.5, 0.05, "2.5%", cex=0.8)
text(0, 0.01, "95%", cex=0.8)
# plot the confidence interval
ci_upper <- mean_diff + (1.96 * se_diff)
confidenceInterval <- c(ci_lower, ci_upper)
library(ggplot2)
data.frame(confidenceInterval = confidenceInterval) |>
ggplot(aes(x = confidenceInterval, y = 1)) +
geom_point() +
geom_line(aes(x = confidenceInterval, y = 1)) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_text(aes(label = "0"), x = 0, y = 0.5, vjust = -1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank()
)
# load the effsize package
library(effsize) #<1>
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) #<2>
confidenceInterval
mean_diff + (1.96 * se_diff)
ci_upper
mean_diff + (1.96 * se_diff) |> round(2)
mean_diff
# calculate the standard error of the difference between the means
se_diff <- sqrt((var_tg/n_tg) + (var_cg/n_cg)) #<3>
se_diff
#The code below will start you off, you need to fill in the missing information
# get the treatment group data
treatmentGroup <- data_over18 |> filter(treatment_group == "Treatment") #<1>
# get the variance of the treatment group
var_tg <- treatmentGroup  |> pull(outcome) |> var() #<2>
# get the sample size of the treatment group
n_tg <- treatmentGroup |> nrow() #<3>
## You need to do the same for the control group
## You need to add the two variances together and divide by the sum of the two sample sizes
## You need to take the square root of the result
# the lower confidence interval
ci_lower <- mean_diff - (1.96 * se_diff) #<1>
ci_lower
# you need to calculate the upper confidence interval
ci_upper <- mean_diff + (1.96 * se_diff) #<2>
ci_upper
n_over18 |> group_by(treatmentGroup) |> summarise(m=mean(outcome), sd= sd(outcome))
View(n_over18)
data_over18 |> group_by(treatmentGroup) |> summarise(m=mean(outcome), sd= sd(outcome))
View(data_over18)
data_over18 |> group_by(treatment_group) |> summarise(m=mean(outcome), sd= sd(outcome))
data_over18 |> group_by(treatment_group) |> summarise(m=mean(outcome), sd= sd(outcome), n())
library(webexercises)
effect_size
?cohens.d
?cohen.d
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group, pooled = T) #<2>
effect_size
power.t.test(d = 0.6, sig.level = 0.05, power = 0.8, type = "two.sample") #<1>
effect_size <- cohen.d(data_over18$outcome ~ data_over18$treatment_group) #<2>
effect_size
effect_size <- cohen.d(data_over18$outcome ~ as.factor(data_over18$treatment_group)) #<2>
effect_size
?cohen.d.formula
data_over18$treatment_group <- as.factor(data_over18$treatment_group)
effect_size <- cohen.d(data_over18$outcome ~ data_over18$treatment_group) #<2>
effect_size
effect_size <- cohen.d(data_over18$outcome ~ data_over18$treatment_group, within = F) #<2>
effect_size
effect_size <- cohen.d(data_over18$outcome ~ data_over18$treatment_group, within = F, hedges.correction = T) #<2>
effect_size
effect_size <- cohen.d(outcome ~ treatment_group, data = data_over18, within = F, hedges.correction = T) #<2>
effect_size
effect_size <- cohen.d(outcome ~ treatment_group, data = data_over18, within = F) #<2>
effect_size
lsr::cohens_d(outcome ~ treatment_group, data = data_over18) #<3>
install.packages("lsr")
lsr::cohens_d(outcome ~ treatment_group, data = data_over18)
lsr::cohensD(outcome ~ treatment_group, data = data_over18) #<3>
install.packages("rstatix")
rstatix::cohens_d(data_over18, outcome ~ treatment_group) #<4>
#| out-width: 100%
# generate two continuous variables and plot them using ggplot Label the x variable AttentionalBias and the y variable Anxiety
set.seed(123)
library(ggplot2)
x <- rnorm(100, 10, 2)
y <- x + rnorm(100, 2, 3)
df <- data.frame(x, y)
p = ggplot(df, aes(x = x, y = y)) + geom_point()
# now fit a linear model to the data and add the intercept value to the plot
lm <- lm(y ~ x, data = df)
intercept <- lm$coefficients[1]
# add the regression line to the plot with a confidence interval
p <- p + geom_abline(intercept = intercept, slope = lm$coefficients[2])
p <- p + labs(x = "Attentional bias", y = "Anxiety")
p
knitr::opts_chunk$set(
fig.align = "center"
)
p + geom_segment(aes(xend = x, yend = predicted, color = "red"), alpha = 0.5)
knitr::opts_chunk$set(
fig.align = "center"
)
#| out-width: 100%
#| out-height: 100%
#| fig-align: center
# generate two continuous variables and plot them using ggplot Label the x variable AttentionalBias and the y variable Anxiety
set.seed(123)
library(ggplot2)
x <- rnorm(100, 10, 2)
y <- x + rnorm(100, 2, 3)
df <- data.frame(x, y)
p = ggplot(df, aes(x = x, y = y)) + geom_point()
# now fit a linear model to the data and add the intercept value to the plot
lm <- lm(y ~ x, data = df)
intercept <- lm$coefficients[1]
# add the regression line to the plot with a confidence interval
p <- p + geom_abline(intercept = intercept, slope = lm$coefficients[2])
p <- p + labs(x = "Attentional bias", y = "Anxiety")
p
# draw a line between the data points and the regression line
p + geom_segment(aes(xend = x, yend = predicted, color = "red"), alpha = 0.5)
#| out-width: 100%
#| out-height: 100%
#| fig-align: center
# generate two continuous variables and plot them using ggplot Label the x variable AttentionalBias and the y variable Anxiety
set.seed(123)
library(ggplot2)
x <- rnorm(100, 10, 2)
y <- x + rnorm(100, 2, 3)
df <- data.frame(x, y)
p = ggplot(df, aes(x = x, y = y)) + geom_point()
# now fit a linear model to the data and add the intercept value to the plot
lm <- lm(y ~ x, data = df)
intercept <- lm$coefficients[1]
# add the regression line to the plot with a confidence interval
p <- p +   geom_smooth(method = "lm", se = FALSE, color = "lightgrey")
p <- p + labs(x = "Attentional bias", y = "Anxiety")
p
# draw a line between the data points and the regression line
p + geom_segment(aes(xend = x, yend = predicted, color = "red"), alpha = 0.5)
p = ggplot(lm, aes(x = x, y = y)) + geom_point()
p
p <- p +   geom_smooth(method = "lm", se = FALSE, color = "lightgrey")
p
# draw a line between the data points and the regression line
p + geom_segment(aes(xend = x, yend = .fitted, color = "red"), alpha = 0.5)
# draw a line between the data points and the regression line
p + geom_segment(aes(xend = x, yend = .fitted, color = "red"), alpha = 0.5) + labs(color = "Residuals")
# draw a line between the data points and the regression line
p + geom_segment(aes(xend = x, yend = .fitted, color = "red"), alpha = 0.5) + guides(color = FALSE)
knitr::opts_chunk$set(
fig.align = "center"
)
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
")
# mermaid diagram linking attentional bias to anxiety
library(DiagrammeR)
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## {background-image="images/anxious.jpg" background-size="contain"}
## Hypothesis influences research design
- The nature of these hypotheses will determine the design of the study, the variables that are measured, and the statistical analysis that is used
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## mermaid diagram showing a moderating effect
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
B --> D[Depression]
D --> C
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## mermaid diagram showing attentional bias as a moderator between anxiery and depression
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
A --> C
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## mermaid diagram showing attentional bias as a moderator between anxiery and depression. Link anxiety to depression and have attentional bias in the middle, but above, with a dotted line to both anxiety and depression
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
A --> C[Depression]
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## mermaid diagram showing attentional bias as a moderator between anxiety and depression. link anxiety to depression from left to right. Create a subgraph with goes from top to bottom linking attentional bias with the centre of the line between anxiety and depression.
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
subgraph Attentional bias
A --> C
end
")
# mermaid diagram linking attentional bias to anxiety
mermaid("
graph LR
A[Attentional bias] --> B[Anxiety]
B --> C[Depression]
")
## mermaid diagram showing attentional bias as a moderator between anxiety and depression. link anxiety to depression from left to right. Create a subgraph with goes from top to bottom linking attentional bias with the centre of the line between anxiety and depression.
mermaid("
graph LR
A[Anxiety] --> B[Attentional Bias]
B --> C[Depression]
subgraph
A --> C
end
")
## mermaid diagram showing attentional bias as a moderator between anxiety and depression. link anxiety to depression from left to right. Create a subgraph with goes from top to bottom linking attentional bias with the centre of the line between anxiety and depression.
mermaid("
graph LR
A[Anxiety] --> B[Attentional Bias]
B --> C[Depression]
subgraph
A --> C
end
")
set.seed(1)
a = seq(1:100) + rnorm(100, sd=5)
b = seq(0.01:0.99, by=0.01) + rnorm(100,sd=3)/100
c = seq(1:100) + rnorm(100,sd=3)
d = seq(1:100) + rnorm(100,sd=3)
summary(lm(a~c+b+d))
summary(lm(a~b+c+d))
setwd("C:/Users/wilso/Documents/GitHub/aprm23/datasets")
mod_data <- read.csv("mod_data.csv")
mod_data <- read.csv("modData.csv")
model1 <- lm(data = mod_data, generalWellbeing ~ timeInCounselling * rapportLevel)
summary(model1)
model2 <- lm(data = mod_data, generalWellbeing ~ rapportLevel * timeInCounselling)
summary(model2)
