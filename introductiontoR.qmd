
```{r, include = FALSE}
source("R/booktem_setup.R")
source("R/my_setup.R")
```

# Introduction to R and R Studio {#sec-introtor}

<iframe src="https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3e9ba1ce-ceeb-491f-9170-adaa008f1944&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&captions=false&interactivity=all" height="405" width="100%" style="border: 1px solid #464646;" allowfullscreen allow="autoplay"></iframe>

### Overview of RStudio.cloud (Now called Posit Cloud)

<iframe src="https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=a385013c-f6a8-4f6f-a7ac-adaa008f196d&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&captions=false&interactivity=all" height="405" width="100%" style="border: 1px solid #464646;" allowfullscreen allow="autoplay"></iframe>

## By the end of this section, you should be able to:

- Download R and R studio
- Identify the R script, R console, Data environment and file browser in R studio
- Write and run R code from a script
- Install and load R packages

## Why learn / use R?

### Some information about R

- R is developed and used by scientists and researchers around the world
- Open source = no cost
- Constant development
- Connects to other data science/research tools
- Worldwide community: training widely available
- Encourages transparency and reproducibility
- Publication-ready outputs

### Moving from other software to R

- Workflow is different
  *	Organise files and data differently
  *	Workspace can contain data and outputs
  *	Can manage multiple datasets within a workspace
- Learning curve can be steep initially
  *	e.g. Variables and coding, scripts
- Need to know what you want
  *	e.g. building your regression model / ANOVA error terms

## R has many advantages

- Using scripts means analysis is easy to follow and reproduce
- R scripts are small, online collaboration, no SPSS “older version” problems
- Data can be organised and reorganised however you need it (tidyr)
- Packages are available for “cutting edge” analysis: e.g. Big Data & Machine Learning
- A robust language for precise plots and graphics (ggplot)
- R analysis code can be embdeded into documents and presentations (R Markdown)


## Download R and R Studio

<iframe src="https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=57425cb0-4364-4af1-b9ae-ac2f00b28010&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&start=0&interactivity=all" height="405" width="100%" style="border: 1px solid #464646;" allowfullscreen allow="autoplay"></iframe>

Click on these links to download:

- [R project](https://cran.r-project.org/) 
- [RStudio](https://rstudio.com/)

## The R Studio environment
![R Studio IDE](images/rstudio_ide.png)
![R Studio IDE](images/rstudio1.png)

The interface for R Studio looks daunting at first. However, there are 4 main sections, 2 on the left and 2 on the right. 

- MAIN TOP: R Script files or R Document Files
  * Where we usually type our code as a script before we run it. Script files are usually saved so we can work on them and rerun the code again later (.R files).
- MAIN BOTTOM: Console
  * Shows the output of our R code. We can type R code directly into the console and the answer will ouput immediately. However, it is more convenient to use script files.
- RIGHT TOP: Environment
  * Contains all of the objects (e.g. data, analysis, equations, plots) that are currently stored in memory. We can save all of this to a file and load it later (.RData files).
- RIGHT BOTTOM: File Browser
  * The folder that R is working from is called ‘the working directory’ and it will automatically look for files there if we try to import something (e.g. a data file). Using the more button on the file browser allows you to set your desired working directory.



## Working with a script

Scripts can be opened from the <if>File > New File > R Script</if> menu.

![Creating a new script](images/file.png)

The purpose of scripts is to allow you to type your analysis code and save it for use later. Scripts include, for example:

- Code for importing data into R 
- Your analysis code (e.g. t-test or descriptive statistics)
- Code for graphs and tables 
- Comments and notes (preceded by the '#' symbol)

![Example of an R script](images/script.png)

To run a script, you click the <if>Run</if> button. You can choose to:

-	Run the whole script
- Run the selected line of code

![The run button](images/run.png)

When you run the script, you will normally see output in the <if>console</if>.

![Output appears in the console](images/console.png)

If your script contains code for a plot (graph), it will appear in the <if>Plots</if> window in the bottom right.

![Plots appear in the plot window](images/plotwindow.png)


## Installing and loading packages

<iframe src="https://player.vimeo.com/video/203516241?color=428bca" width="640" height="400" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
<p><a href="https://vimeo.com/203516241">install Packages</a> from <a href="https://vimeo.com/rstudioinc">RStudio, Inc.</a> on <a href="https://vimeo.com">Vimeo</a>.</p>

Packages add functionality to R and allow us to do new types of analysis.

- They can be installed via the menu <if>Tools -> Install Packages</if>
- The can also be installed using code: 


`install.packages()`

For example, <pkg>tidyr</pkg> is a package that contains functions for sorting and organising data. To install the package:

![Installing a package in RStudio](images/installPackages.png)

or use the code:


`install.packages(“tidyr”)`


  
Once a package is has been installed, you need tp load it using the `library()` command.
For example:

```{r eval=F}
   library(tidyr)
```

 
# Revision Quiz {.unnumbered}

::: {.webex-check .webex-box}

What is the purpose of R scripts in the context of data analysis?
`r mcq(c( "To create interactive visualizations", "To organize files and folders on your computer", answer =  "To type and save analysis code for later use", "To display the output of R code immediately"))`

What does the Environment in R Studio primarily display?
`r mcq(c( "The R script files", "Publication-ready outputs", answer = "Objects (data, analysis, plots) currently in memory",  "The R package installation menu"))`

Which of the following is a reason to learn and use R?
`r mcq(c( "It is a closed-source software", "It is used exclusively by programmers", answer = "It has a large number of packages and a wide community of users",  "It doesn't require any coding skills"))`

How can you install an R package in R Studio?
`r mcq(c( "By clicking 'Load' in the Environment section", "By running the package's executable file", answer = "By using the 'install.packages()' function", "By copying the package files to the working directory"))`

What does the 'Run' button do in R Studio?
`r mcq(c( "It compiles the R script into a standalone program", "It generates publication-ready outputs", answer = "It runs the code in the R script",  "It opens the R package manager"))`


How can you load a previously installed R package?
`r mcq(c( "By clicking the 'Load' button in the Console", "By typing 'install.packages()' in the Console", answer =  "By using the 'library(package_name)' command", "By copying the package files to the working directory"))`

True or False: You can work on multiple datasets at the same time using R / R Studio? `r torf(TRUE)` 

What advantage does using R scripts for analysis provide?
`r mcq(c( "They enable real-time collaboration with other users", "They allow you to create complex interactive visualizations",answer =  "They encourage transparency and reproducibility of analysis", "They automatically generate publication-ready reports"))`


What is the main role of the R Console in R Studio?
`r mcq(c( "To create interactive visualizations", "To dispay objects in memory", "To organize and manage files in the workspace", answer = "To provide an interactive environment to run R code"))`

"What is the difference between R and R Studio?
`r mcq(c( answer = "R is a statistical programming language, while R Studio is a software developed for using R to do analysis", "R is a data visualization tool, while R Studio is a statistical analysis software", "R is used for web development, while R Studio is used for machine learning",  "R is the name of the software, while R Studio is a community forum"))`"

:::


