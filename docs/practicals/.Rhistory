# data_train <- training(data_split)
# data_test <- testing(data_split)
#
# set.seed(234)
# data_folds <- vfold_cv(data_train, strata = correct_id)
#
# # build model
#
# mixed_model_spec <- logistic_reg() %>% set_engine("glmer")
# rec_basic <- recipe(correct_id ~ ., data = test_data, family="binomial")
#
# library(multilevelmod)
#
# wflow <-
#   workflow() %>%
#   add_recipe(rec_basic) %>%
#   add_model(mixed_model_spec, formula = correct_id ~  target_abs_pres + cond_dist_features + (1|PID))
#
# doParallel::registerDoParallel()
#
# ctrl_preds <- control_resamples(save_pred = T)
# rs <- fit_resamples(wflow, data_folds, control = ctrl_preds)
#
# augment(rs) %>%
#   roc_curve(correct_id, .pred_TRUE) %>%
#   autoplot()
#
# model_fit<- fit(wflow, data_train)
#
# glance(model_fit)
#
#
# #### get dataset of predictions
#
# pred_data <- augment(model_fit, test_data)
#
# #### Confusion matrix
#
# conf_mat(pred_data, truth = correct_id, estimate = .pred_class)
#
# #### model performance
#
# perf <- metric_set(accuracy,
#                    sensitivity,
#                    specificity,
#                    mcc,
#                    precision,
#                    recall)
#
#
# perf(pred_data, truth = correct_id, estimate = .pred_class)
#
# #### ROC
#
# roc_auc(pred_data, truth = correct_id, .pred_TRUE, event_level = "second") %>%
#    autoplot()
#
#
# pred_data %>%
#   roc_curve(correct_id, .pred_TRUE, event_level = "second") %>%
#   autoplot()
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line() +
facet_wrap(pre_post~adult_child)
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line() + geom_abline(intercept = 0) +
facet_wrap(pre_post~adult_child)
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line() + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child)
roc_plot
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line() + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes()) + geom_line() + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = confidence_rating)) + geom_line() + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line(aes(line = cond_dist_features)) + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(size = confidence_rating, shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child) +lims(x = c(0,0.3), y = c(0,0.3))
roc_plot
View(data_summary)
data_summary %>%
group_by(cond_dist_features, adult_child) %>%
summarise(count(make_id))
data_summary %>%
group_by(cond_dist_features, adult_child) %>%
summarise(count(made_id))
data_summary %>%
group_by(cond_dist_features, adult_child) %>%
summarise(sum(made_id))
data_summary %>%
group_by(cond_dist_features, target_abs_pres, adult_child) %>%
summarise(sum(made_id))
roc_plot
roc_plot <- ROC_data %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1) +
facet_wrap(pre_post~adult_child)
roc_plot
roc_plot
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1)
roc_plot <- ROC_data %>%
filter(adult_child == "child")
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1)
roc_plot <- ROC_data %>%
filter(adult_child == "child") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1)
roc_plot
roc_plot <- ROC_data %>%
filter(adult_child == "child") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) + geom_abline(intercept = 0, slope = 1)  + facet_wrap(pre_post~.)
roc_plot
data_summary %>%
filter(adult_child == "child") %>%
group_by(cond_dist_features, target_abs_pres) %>%
summarise(sum(made_id), sum(correct_id), sum(false_id))
data_summary %>%
filter(adult_child == "child") %>%
group_by(cond_dist_features, target_abs_pres) %>%
summarise(sum(made_id), sum(correct_id), sum(false_id), sum(correct))
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.)
roc_plot
0.1/0.3
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = -.33)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.)
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) %>% jtools::theme_apa()
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa()
roc_plot
roc_plot <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate")
roc_plot_pre
roc_plot_post
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .33)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post
ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .5)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = .5)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post
0.3 / 0.1
roc_plot_post <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post
roc_plot_pre
roc_plot_pre1 <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_post1 <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_pre1
FAR <- data_summary %>%
group_by(adult_child, cond_dist_features, pre_post) %>%
summarise(n_ta = length(target_abs_pres == "absent"),
FAR4 = (sum(false_id[confidence_rating >= 4])/9)/n_ta,
FAR3 = (sum(false_id[confidence_rating >= 3])/9)/n_ta,
FAR2 = (sum(false_id[confidence_rating >= 2])/9)/n_ta,
FAR1 = (sum(false_id[confidence_rating >= 1])/9)/n_ta,
FAR0 = (sum(false_id[confidence_rating >= 0])/9)/n_ta,
)  %>%
ungroup()
FAR <- FAR %>%
mutate_all(~replace(., is.nan(.), 0))
ROC_data <- left_join(HR, FAR)
ROC_data <- ROC_data %>% select(-n_tp,-n_ta)
ROC_data <- ROC_data %>%
pivot_longer(cols = HR4:FAR0, names_to = c("test","confidence_rating"), names_pattern = "(.*)(\\d+)") %>%
pivot_wider(names_from = test, values_from = value )
roc_plot_pre1 <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre1
roc_plot_post1 <- ROC_data %>%
filter(pre_post == "confidence_post") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.3), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 1)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Post-lineup")
roc_plot_post1
roc_plot_pre1
roc_plot_pre <- ROC_data %>%
filter(pre_post == "confidence_pre") %>%
ggplot(aes(x = FAR, y = HR, color = cond_dist_features)) +
geom_point(aes(shape = cond_dist_features)) + geom_line(aes(linetype = cond_dist_features)) +
lims(x = c(0,0.1), y = c(0,0.3)) +
geom_abline(intercept = 0, slope = 3)  + facet_wrap(adult_child ~.) + jtools::theme_apa() +
labs(x = "False Identification Rate", y="Correct Identification Rate", title = "ROC: Confidence Ratings Pre-lineup")
roc_plot_pre
roc_plot_pre1
roc_plot_pre
roc_plot_pre1
roc_plot_post1
library(webexercises)
practical2_data <- read.csv("practical2_data.csv")
library(dplyr) #<1>
setwd("~/GitHub/aprm23/docs/practicals")
library(webexercises)
practical2_data <- read.csv("practical2_data.csv")
library(dplyr) #<1>
data_over18 <- practical2_data |> filter( age > 18)
n_over18 <- practical2_data |> filter( age > 18) |> count()
data_over18 |> group_by(treatment_group) |> summarise(mean_age = mean(age)) #<1>
mean_diff <- data_over18 |> group_by(treatment_group) |> summarise(mean_outcome = mean(outcome)) |> pull(mean_outcome) |> diff()
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> var(outcome)
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> pull(outcome) |> var()
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> pull(outcome) |> var()
var_cg <- data_over18 |> filter(treatment_group == "Control")  |> pull(outcome) |> var()
# calculate the sample size of each group
n_tg <- data_over18 |> filter(treatment_group == "Treatment") |> nrow()
n_cg <- data_over18 |> filter(treatment_group == "Control") |> nrow()
# calculate the standard error of the difference between the means
se_diff <- sqrt((var_tg/n_tg) + (var_cg/n_cg))
setwd("~/")
setwd("~/GitHub/aprm23/docs/practicals")
install.packages("effsize")
# load the effsize package
library(effsize) #<1>
effect_size <- cohen.d(data = data_over18, #<1>
formula = outcome ~ treatment_group, #<2>
group = "treatment_group") #<3>
?cohen.d
# load the effsize package
library(effsize) #<1>
effect_size <- cohen.d(data_over18$outcome, data_over18$group) #<2>
effect_size
effect_size <- cohen.d(data_over18$outcome ~ data_over18$group) #<2>
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) #<2>
effect_size
library(webexercises)
practical2_data <- read.csv("practical2_data.csv")
library(dplyr) #<1>
data_over18 <- practical2_data |> filter( age > 18)
n_over18 <- practical2_data |> filter( age > 18) |> count()
mean_diff <- data_over18 |> group_by(treatment_group) |> summarise(mean_outcome = mean(outcome)) |> pull(mean_outcome) |> diff()
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> pull(outcome) |> var()
var_cg <- data_over18 |> filter(treatment_group == "Control")  |> pull(outcome) |> var()
# calculate the sample size of each group
n_tg <- data_over18 |> filter(treatment_group == "Treatment") |> nrow()
n_cg <- data_over18 |> filter(treatment_group == "Control") |> nrow()
# calculate the standard error of the difference between the means
se_diff <- sqrt((var_tg/n_tg) + (var_cg/n_cg))
#The code below will start you off, you need to fill in the missing information
# get the treatment group data
treatmentGroup <- data_over18 |> filter(treatment_group == "Treatment") #<1>
# get the variance of the treatment group
var_tg <- treatmentGroup  |> pull(outcome) |> var() #<2>
# get the sample size of the treatment group
n_tg <- treatmentGroup |> nrow() #<3>
## You need to do the same for the control group
## You need to add the two variances together and divide by the sum of the two sample sizes
## You need to take the square root of the result
# the lower confidence interval
ci_lower <- mean_diff - (1.96 * se_diff) #<1>
# you need to calculate the upper confidence interval
# plot the confidence interval
ci_upper <- mean_diff + (1.96 * se_diff)
confidenceInterval <- c(ci_lower, ci_upper)
library(ggplot2)
data.frame(confidenceInterval = confidenceInterval) |>
ggplot(aes(x = confidenceInterval, y = 1)) +
geom_point() +
geom_line(aes(x = confidenceInterval, y = 1)) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_text(aes(label = "0"), x = 0, y = 0.5, vjust = -1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank()
)
# load the effsize package
library(effsize) #<1>
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) #<2>
effect_size$magnitude
effect_size$estimate
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) |> estimate #<2>
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) |> pull(estimate) #<2>
data_over18 |> cohen.d(outcome, treatment_group)
data_over18 |> cohen.d(.$outcome, treatment_group)
data_over18
data_over18 %>% cohen.d(outcome, treatment_group)
data_over18 %>% cohen.d(.$outcome, .$treatment_group)
library(webexercises)
practical2_data <- read.csv("practical2_data.csv")
library(dplyr) #<1>
data_over18 <- practical2_data |> filter( age > 18)
n_over18 <- practical2_data |> filter( age > 18) |> count()
mean_diff <- data_over18 |> group_by(treatment_group) |> summarise(mean_outcome = mean(outcome)) |> pull(mean_outcome) |> diff()
# calculate the variance of the each group
var_tg <- data_over18 |> filter(treatment_group == "Treatment") |> pull(outcome) |> var()
var_cg <- data_over18 |> filter(treatment_group == "Control")  |> pull(outcome) |> var()
# calculate the sample size of each group
n_tg <- data_over18 |> filter(treatment_group == "Treatment") |> nrow()
n_cg <- data_over18 |> filter(treatment_group == "Control") |> nrow()
# calculate the standard error of the difference between the means
se_diff <- sqrt((var_tg/n_tg) + (var_cg/n_cg))
#The code below will start you off, you need to fill in the missing information
# get the treatment group data
treatmentGroup <- data_over18 |> filter(treatment_group == "Treatment") #<1>
# get the variance of the treatment group
var_tg <- treatmentGroup  |> pull(outcome) |> var() #<2>
# get the sample size of the treatment group
n_tg <- treatmentGroup |> nrow() #<3>
## You need to do the same for the control group
## You need to add the two variances together and divide by the sum of the two sample sizes
## You need to take the square root of the result
# the lower confidence interval
ci_lower <- mean_diff - (1.96 * se_diff) #<1>
# you need to calculate the upper confidence interval
# plot of notmal distribution with 2.5% shaded on each side
x <- seq(-4, 4, length=100)
y <- dnorm(x, mean=0, sd=1)
plot(x, y, type="l", lwd=2, xlab="Standard Deviations", ylab="")
abline(v=c(-1.96, 1.96), lty=2)
abline(h=0, lty=2)
## add labels to represent the percentages of the distribution in the shaded and non-shaded areas
text(-2.5, 0.05, "2.5%", cex=0.8)
text(2.5, 0.05, "2.5%", cex=0.8)
text(0, 0.01, "95%", cex=0.8)
# plot the confidence interval
ci_upper <- mean_diff + (1.96 * se_diff)
confidenceInterval <- c(ci_lower, ci_upper)
library(ggplot2)
data.frame(confidenceInterval = confidenceInterval) |>
ggplot(aes(x = confidenceInterval, y = 1)) +
geom_point() +
geom_line(aes(x = confidenceInterval, y = 1)) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_text(aes(label = "0"), x = 0, y = 0.5, vjust = -1) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank()
)
# load the effsize package
library(effsize) #<1>
effect_size <- cohen.d(data_over18$outcome, data_over18$treatment_group) #<2>
