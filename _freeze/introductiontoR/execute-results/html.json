{
  "hash": "deb11f92da946a4fc7eedf3db0961976",
  "result": {
    "markdown": "\n\n\n# Introduction to R and R Studio {#sec-introtor}\n\n<iframe src=\"https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3e9ba1ce-ceeb-491f-9170-adaa008f1944&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&captions=false&interactivity=all\" height=\"405\" width=\"100%\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\"></iframe>\n\n### Overview of RStudio.cloud (Now called Posit Cloud)\n\n<iframe src=\"https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=a385013c-f6a8-4f6f-a7ac-adaa008f196d&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&captions=false&interactivity=all\" height=\"405\" width=\"100%\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\"></iframe>\n\n## By the end of this section, you should be able to:\n\n- Download R and R studio\n- Identify the R script, R console, Data environment and file browser in R studio\n- Write and run R code from a script\n- Install and load R packages\n\n## Why learn / use R?\n\n### Some information about R\n\n- R is developed and used by scientists and researchers around the world\n- Open source = no cost\n- Constant development\n- Connects to other data science/research tools\n- Worldwide community: training widely available\n- Encourages transparency and reproducibility\n- Publication-ready outputs\n\n### Moving from other software to R\n\n- Workflow is different\n  *\tOrganise files and data differently\n  *\tWorkspace can contain data and outputs\n  *\tCan manage multiple datasets within a workspace\n- Learning curve can be steep initially\n  *\te.g. Variables and coding, scripts\n- Need to know what you want\n  *\te.g. building your regression model / ANOVA error terms\n\n## R has many advantages\n\n- Using scripts means analysis is easy to follow and reproduce\n- R scripts are small, online collaboration, no SPSS “older version” problems\n- Data can be organised and reorganised however you need it (tidyr)\n- Packages are available for “cutting edge” analysis: e.g. Big Data & Machine Learning\n- A robust language for precise plots and graphics (ggplot)\n- R analysis code can be embdeded into documents and presentations (R Markdown)\n\n\n## Download R and R Studio\n\n<iframe src=\"https://teesside.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=57425cb0-4364-4af1-b9ae-ac2f00b28010&autoplay=false&offerviewer=true&showtitle=true&showbrand=false&start=0&interactivity=all\" height=\"405\" width=\"100%\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\"></iframe>\n\nClick on these links to download:\n\n- [R project](https://cran.r-project.org/) \n- [RStudio](https://rstudio.com/)\n\n## The R Studio environment\n![R Studio IDE](images/rstudio_ide.png)\n![R Studio IDE](images/rstudio1.png)\n\nThe interface for R Studio looks daunting at first. However, there are 4 main sections, 2 on the left and 2 on the right. \n\n- MAIN TOP: R Script files or R Document Files\n  * Where we usually type our code as a script before we run it. Script files are usually saved so we can work on them and rerun the code again later (.R files).\n- MAIN BOTTOM: Console\n  * Shows the output of our R code. We can type R code directly into the console and the answer will ouput immediately. However, it is more convenient to use script files.\n- RIGHT TOP: Environment\n  * Contains all of the objects (e.g. data, analysis, equations, plots) that are currently stored in memory. We can save all of this to a file and load it later (.RData files).\n- RIGHT BOTTOM: File Browser\n  * The folder that R is working from is called ‘the working directory’ and it will automatically look for files there if we try to import something (e.g. a data file). Using the more button on the file browser allows you to set your desired working directory.\n\n\n\n## Working with a script\n\nScripts can be opened from the **File** menu.\n\n![Creating a new script](images/file.png)\n\nThe purpose of scripts is to allow you to type your analysis code and save it for use later. Scripts include, for example:\n\n- Code for importing data into R \n- Your analysis code (e.g. t-test or descriptive statistics)\n- Code for graphs and tables \n- Comments and notes (preceded by the '#' symbol)\n\n![Example of an R script](images/script.png)\n\nTo run a script, you click the **Run** button. You can choose to:\n\n-\tRun the whole script\n- Run the selected line of code\n\n![The run button](images/run.png)\n\nWhen you run the script, you will normally see output in the **console.**\n\n![Output appears in the console](images/console.png)\n\nIf your script contains code for a plot (graph), it will appear in the **Plots** window in the bottom right.\n\n![Plots appear in the plot window](images/plotwindow.png)\n\n\n## Installing and loading packages\n\n<iframe src=\"https://player.vimeo.com/video/203516241?color=428bca\" width=\"640\" height=\"400\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe>\n<p><a href=\"https://vimeo.com/203516241\">install Packages</a> from <a href=\"https://vimeo.com/rstudioinc\">RStudio, Inc.</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n\nPackages add functionality to R and allow us to do new types of analysis.\n\n- They can be installed via the menu (Tools -> Install Packages)\n- The can also be installed using code: \n\n\n          install.packages()\n\nFor example, TidyR is a package that contains functions for sorting and organising data. To install the package:\n\n![Installing a package in RStudio](images/installPackages.png)\n\nor use the code:\n\n\n      install.packages(“tidyr”)\n\n\n  \nOnce a package is has been installed, you need tp load it using the *library()* command.\nFor example:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n   library(tidyr)\n```\n:::\n",
    "supporting": [
      "introductiontoR_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}